name: Security Scan (Semgrep + Snyk)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write  # pour envoyer les résultats SARIF dans GitHub

jobs:
  semgrep:
    name: Semgrep SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Semgrep
        uses: returntocorp/semgrep-action@v1
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
          SEMGREP_RULES: >-
            p/owasp-top-ten
        with:
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
          publishDeployment: true

  snyk:
    name: Snyk SCA (Python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show workspace (debug)
        run: |
          echo "PWD=$(pwd)"
          echo "List of files:"
          ls -la
          echo "If your requirements file is in a subfolder, adjust path."

      - name: Run Snyk test (produce SARIF)
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: test --all-projects --sarif-file-output=snyk.sarif || true

      - name: Check SARIF file exists (debug)
        run: |
          if [ -f snyk.sarif ]; then
            echo "✅ snyk.sarif found, showing first lines:"
            head -n 40 snyk.sarif
          else
            echo "⚠️ snyk.sarif not found!"
          fi

      - name: Upload SARIF to GitHub Code Scanning (if present)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      - name: Upload SARIF as artifact (for manual download)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snyk-sarif
          path: snyk.sarif
