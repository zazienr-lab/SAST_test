name: üîí Analyse de s√©curit√© (Semgrep + Snyk)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  semgrep:
    name: Semgrep SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Semgrep scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/ci
            p/security-audit
          generateSarif: true

      - name: Upload Semgrep results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  snyk:
    name: Snyk SCA (Python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Afficher l‚Äôarborescence du projet (debug)
        run: |
          echo "üìÇ Contenu du r√©pertoire :"
          ls -R .
          echo "Si requirements.txt n'est pas √† la racine, ajuste le chemin dans la commande Snyk."

      - name: Ex√©cuter le scan Snyk
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: test --all-projects --sarif-file-output=snyk.sarif || true

      - name: V√©rifier la pr√©sence du fichier SARIF (debug)
        run: |
          if [ -f snyk.sarif ]; then
            echo "‚úÖ Fichier snyk.sarif trouv√©"
            head -n 30 snyk.sarif
          else
            echo "‚ö†Ô∏è Aucun fichier snyk.sarif trouv√© !"
          fi

      - name: Upload vers GitHub Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      - name: Upload du rapport Snyk en tant qu‚Äôartifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snyk-scan-results
          path: snyk.sarif
